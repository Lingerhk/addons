<?php

namespace Addons\RegUid\Controller;
use Home\Controller\AddonsController;

class RegUidController extends AddonsController{

	Public function _initialize() {
		
		$controller = strtolower ( _ACTION );
		
		$res ['title'] = '考勤录入表';
		$res ['url'] = addons_url ( 'RegUid://RegUid/lists' );
		$res ['class'] = $controller == 'lists' ? 'current' : '';
		$nav [] = $res;
		
		$res ['title'] = '添加考勤ID卡';
		$res ['url'] = addons_url ( 'RegUid://RegUid/test' );
		$res ['class'] = $controller == 'test' ? 'current' : '';
		$nav [] = $res;
				
		$this->assign ( 'nav', $nav );
	}

	public function lists() {
	
		$this->assign ( 'add_button', false );
		$model = $this->getModel ('reguserid');
		parent::common_lists ( $model );
	}
	
	public function test() {
		if(IS_POST){
			$data['userid'] = I('post.userid');
			$data['p_phone'] = I('post.phone');

			if($data['userid']=='') { 
				$data['userid'] = 'None';
			}
			if($data['p_phone']=='') {
				$data['p_phone'] = 'None';
			}

			$data['pri_key'] = get_rand_char(); //默认随机生成6位字符
			
			M ('reguserid')->add ($data);
			
			$this->success('添加成功，正返回继续添加！');
		}else{
			$this->display();
		}
	}	
	
	
	//获取access_token
	public function get_access_token(){
	
		$map ['token'] = get_token ();
		$info = M ( 'member_public' )->where ( $map )->find ();
		$url_get = 'https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=' . $info ['appid'] . '&secret=' . $info ['secret'];
		$data = json_decode($this->curlGet($url_get), true);
		if ($data ['errcode'] == 0) {

			return $data;
		}else{
		
			return $data;
		}
	}
	
	public function curlPost($url, $data){
		$ch = curl_init();
		$header = "Accept-Charset: utf-8";
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
		curl_setopt($curl, CURLOPT_HTTPHEADER, $header);
		curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)');
		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
		curl_setopt($ch, CURLOPT_AUTOREFERER, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
		$tmpInfo = curl_exec($ch);
		$errorno=curl_errno($ch);
		return $tmpInfo;
	}
	
    public function curlGet($url){
		$ch = curl_init();
		$header = "Accept-Charset: utf-8";
		curl_setopt($ch, CURLOPT_URL, $url);
		curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
		curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
		curl_setopt($curl, CURLOPT_HTTPHEADER, $header);
		curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)');
		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
		curl_setopt($ch, CURLOPT_AUTOREFERER, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
		$temp = curl_exec($ch);
		return $temp;
	}
}
